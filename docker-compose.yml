# OpenSSL Container
# Container that only generate SSL/TLS Certificate and Key then exits.
openssl:
  # https://hub.docker.com/r/frapsoft/openssl/
  image: frapsoft/openssl
  # Your local directory are mounted with the container /export directory
  volumes:
    - ./:/export
  # Command that the container will execute to generate the .crt and .key
  command: req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /export/cert.key -out /export/cert.crt -subj '/CN=fiware-orion/O=fiware/C=BR'
  container_name: secfiware_openssl


# MongoDB Container
mongo:
  # https://hub.docker.com/r/library/mongo/
  image: mongo
  # Run with --nojournal to prevent log saturation
  command: --nojournal
  container_name: secfiware_mongodb


# Orion Context-Broker Container
# C++ WebService that perform operations on the MongoDB via REST
orion:
  # https://hub.docker.com/r/fiware/orion/
  image: fiware/orion
  # This container only will start after mongo
  ports:
    - 1026:1026
  volumes:
    - ./cert.crt:/etc/orion-ssl/cert.crt
    - ./cert.key:/etc/orion-ssl/cert.key
  links:
    - mongo
  # Passing the -https parameter to enable Orion in HTTPS context.
  command: -dbhost mongo -https -key /etc/orion-ssl/cert.key -cert /etc/orion-ssl/cert.crt
  container_name: secfiware_orion
